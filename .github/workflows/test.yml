on: [push]

name: Test

env:
  RUSTFLAGS: "-Dwarnings --cfg tracing_unstable"

jobs:
  cargo-build:
    name: Cargo Build
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2

      - name: Install protoc
        run: |
          sudo apt-get install -y protobuf-compiler

      - name: Build project
        run: cargo build

  node-setup:
    name: Node Setup
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: polybase-ts
          repository: polybase/polybase-ts
          token: ${{ secrets.ADMIN_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: ./polybase-ts/yarn.lock
      
      - name: Install deps
        working-directory: polybase-ts
        run: yarn install

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest-16-cores
    needs: cargo-build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2

      - name: Install protoc
        run: |
          sudo apt-get install -y protobuf-compiler

      - name: Run unit tests
        run: cargo test

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest-16-cores
    needs: [cargo-build, node-setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: polybase-ts
          repository: polybase/polybase-ts
          token: ${{ secrets.ADMIN_TOKEN }}

      - uses: Swatinem/rust-cache@v2

      - name: Install protoc
        run: |
          sudo apt-get install -y protobuf-compiler

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: ./polybase-ts/yarn.lock

      - name: Run server
        run: cargo run --bin polybase &

      - name: Install deps
        working-directory: polybase-ts
        run: yarn install && yarn build

      - name: Wait for server
        run: |
          timeout 30 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)" != "200" ]]; do sleep 1; done' || false

      - name: Run E2E tests
        working-directory: polybase-ts/packages/client
        run: yarn test:e2e

  build:
    name: Build & Run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Depot
        uses: depot/setup-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker
        uses: depot/build-push-action@v1
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          load: true
          tags: polybase-build

      - name: Run Docker
        run: |
          docker run -d -p 8080:8080 --name=polybase polybase-build

      - name: Wait for port to be ready
        run: |
          timeout 5 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)" != "200" ]]; do sleep 1; done' || false

      - name: CURL
        run: curl -sSf http://localhost:8080

  clippy:
    name: Clippy Check
    runs-on: ubuntu-latest-16-cores
    needs: cargo-build
    steps:
      - uses: actions/checkout@v3
      
      - uses: Swatinem/rust-cache@v2

      - name: Install protoc
        run: |
          sudo apt-get install -y protobuf-compiler

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features
