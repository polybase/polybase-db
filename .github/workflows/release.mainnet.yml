name: Mainnet deploy

on:
  release:
    types: [published]

env:
  GCLOUD_PROJECT: polybase-mainnet
  GKE_CLUSTER: mainnet
  GKE_ZONE: us-central1

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, and Publish
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Log in to the image registry
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.MAINNET_GCR_KEY }}

      # Build the Docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: v0.9.1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            gcr.io/polybase-mainnet/polybase
          flavor: latest=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      #Get tag
      - name: Set outputs
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.tag }}

      - name: Auth GKE
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.MAINNET_GCR_KEY }}

      - name: Get GKE Credentials
        uses: "google-github-actions/get-gke-credentials@v0"
        with:
          project_id: ${{ env.GCLOUD_PROJECT }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Set up helm
      - name: Set up Helm
        run: |-
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy
        run: |-
          cd ./helm/
          helm upgrade --install --set image.tag=${{ steps.vars.outputs.tag }} polybase . -f mainnet-values.yaml -n polybase
